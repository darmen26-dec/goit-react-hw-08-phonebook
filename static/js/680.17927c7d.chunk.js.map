{"version":3,"file":"static/js/680.17927c7d.chunk.js","mappings":"iNA2BA,UAxBiB,WACf,OACEA,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACEC,EAAAA,EAAAA,MAACC,EAAAA,GAAc,CAAAF,SAAA,EACbF,EAAAA,EAAAA,KAACK,EAAAA,GAAM,CAAAH,UACLF,EAAAA,EAAAA,KAAA,SAAAE,SAAO,YAETF,EAAAA,EAAAA,KAACM,EAAAA,EAAS,CAACC,KAAM,MAAOC,eAAa,EAAAN,UACnCF,EAAAA,EAAAA,KAACS,EAAAA,EAAM,CAAAP,UACLF,EAAAA,EAAAA,KAACU,EAAAA,GAAG,CAACC,QAAS,QAASC,GAAI,KAAKV,UAC9BC,EAAAA,EAAAA,MAACU,EAAAA,EAAO,CAACC,GAAI,KAAMC,SAAU,KAAMC,GAAI,IAAId,SAAA,CAAC,gCACZ,KAC9BF,EAAAA,EAAAA,KAAA,QAAMiB,KAAM,MAAO,aAAY,gBAAgBf,SAAC,gDAUhE,C,0KCOaI,GAAYY,EAAAA,EAAAA,IAAkC,SACzDC,EACAC,GAEA,OAA8CC,EAAAA,EAAAA,IAAiBF,GAAvDG,EAAAA,EAAAA,UAAWd,EAAAA,EAAAA,cAAkBe,GAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAE/BC,GAASC,EAAAA,EAAAA,IAAe,YAAaN,GAE3C,OACE,SAACO,EAAAA,EAAAA,KAAUC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAAA,CACTP,IAAAA,EACAE,WAAWM,EAAAA,EAAAA,IAAG,mBAAoBN,IAC9BC,GAAAA,CAAAA,EAAAA,CACJM,OAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAAA,CAAAA,EACKL,GACChB,GAAiB,CACnBsB,QAAS,OACTC,cAAe,SACfC,WAAY,aAKtB,IAEA1B,EAAU2B,YAAc,W,uHC/CXxB,GAASiB,EAAAA,EAAAA,GAAO,MAAO,CAClCQ,UAAW,CACTJ,QAAS,OACTE,WAAY,SACZG,eAAgB,YAIpB1B,EAAOwB,YAAc,SAMrB,IAAMG,EAAe,CACnBC,WAAY,CACVC,WAAY,MACZC,UAAW,oBAEbC,SAAU,CACRC,IAAK,MACLF,UAAW,oBAEbG,KAAM,CACJJ,WAAY,MACZG,IAAK,MACLF,UAAW,2BAaerB,EAAAA,EAAAA,IAC5B,SAAwBC,EAAOC,GAC7B,MAAmCD,EAA3BwB,KAAAA,OAAAA,IAAO,WAAWpB,GAAAA,EAAAA,EAAAA,GAASJ,EAAAA,GACnC,OACE,SAACO,EAAAA,EAAAA,KAAUC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAAA,CACTP,IAAAA,EACAS,MAAOO,EAAaO,IAChBpB,GAAAA,CAAAA,EAAAA,CACJqB,SAAS,aAGf,G","sources":["pages/HomePage/HomePage.jsx","../node_modules/@chakra-ui/layout/src/container.tsx","../node_modules/@chakra-ui/layout/src/center.tsx"],"sourcesContent":["import { Helmet, HelmetProvider } from 'react-helmet-async';\nimport { Container, Center, Box, Heading } from '@chakra-ui/react';\n\nconst HomePage = () => {\n  return (\n    <>\n      <HelmetProvider>\n        <Helmet>\n          <title>Home</title>\n        </Helmet>\n        <Container maxW={'2xl'} centerContent>\n          <Center>\n            <Box padding={'100px'} mt={'10'}>\n              <Heading as={'h2'} fontSize={'xl'} mb={'4'}>\n                Contacts manager welcome page{' '}\n                <span role={'img'} aria-label={'Greeting icon'}>\n                  üíÅ‚Äç‚ôÄÔ∏è\n                </span>\n              </Heading>\n            </Box>\n          </Center>\n        </Container>\n      </HelmetProvider>\n    </>\n  );\n};\n\nexport default HomePage;\n","import {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  ThemingProps,\n  useStyleConfig,\n  HTMLChakraProps,\n} from \"@chakra-ui/system\"\nimport { cx } from \"@chakra-ui/shared-utils\"\n\nexport interface ContainerProps\n  extends HTMLChakraProps<\"div\">,\n    ThemingProps<\"Container\"> {\n  /**\n   * If `true`, container will center its children\n   * regardless of their width.\n   *\n   * @default false\n   */\n  centerContent?: boolean\n}\n\n/**\n * Layout component used to wrap app or website content\n *\n * It sets `margin-left` and `margin-right` to `auto`,\n * to keep its content centered.\n *\n * It also sets a default max-width of `60ch` (60 characters).\n *\n * @see Docs https://chakra-ui.com/docs/components/container\n */\nexport const Container = forwardRef<ContainerProps, \"div\">(function Container(\n  props,\n  ref,\n) {\n  const { className, centerContent, ...rest } = omitThemingProps(props)\n\n  const styles = useStyleConfig(\"Container\", props)\n\n  return (\n    <chakra.div\n      ref={ref}\n      className={cx(\"chakra-container\", className)}\n      {...rest}\n      __css={{\n        ...styles,\n        ...(centerContent && {\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\",\n        }),\n      }}\n    />\n  )\n})\n\nContainer.displayName = \"Container\"\n","import { chakra, forwardRef, HTMLChakraProps } from \"@chakra-ui/system\"\n\nexport interface CenterProps extends HTMLChakraProps<\"div\"> {}\n\n/**\n * React component used to horizontally and vertically center its child.\n * It uses the popular `display: flex` centering technique.\n *\n * @see Docs https://chakra-ui.com/center\n */\nexport const Center = chakra(\"div\", {\n  baseStyle: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n})\n\nCenter.displayName = \"Center\"\n\nexport interface AbsoluteCenterProps extends HTMLChakraProps<\"div\"> {\n  axis?: \"horizontal\" | \"vertical\" | \"both\"\n}\n\nconst centerStyles = {\n  horizontal: {\n    insetStart: \"50%\",\n    transform: \"translateX(-50%)\",\n  },\n  vertical: {\n    top: \"50%\",\n    transform: \"translateY(-50%)\",\n  },\n  both: {\n    insetStart: \"50%\",\n    top: \"50%\",\n    transform: \"translate(-50%, -50%)\",\n  },\n}\n\n/**\n * React component used to horizontally and vertically center an element\n * relative to its parent dimensions.\n *\n * It uses the `position: absolute` strategy.\n *\n * @see Docs https://chakra-ui.com/center\n * @see WebDev https://web.dev/centering-in-css/#5.-pop-and-plop\n */\nexport const AbsoluteCenter = forwardRef<AbsoluteCenterProps, \"div\">(\n  function AbsoluteCenter(props, ref) {\n    const { axis = \"both\", ...rest } = props\n    return (\n      <chakra.div\n        ref={ref}\n        __css={centerStyles[axis]}\n        {...rest}\n        position=\"absolute\"\n      />\n    )\n  },\n)\n"],"names":["_jsx","_Fragment","children","_jsxs","HelmetProvider","Helmet","Container","maxW","centerContent","Center","Box","padding","mt","Heading","as","fontSize","mb","role","forwardRef","props","ref","omitThemingProps","className","rest","styles","useStyleConfig","chakra","div","cx","__css","display","flexDirection","alignItems","displayName","baseStyle","justifyContent","centerStyles","horizontal","insetStart","transform","vertical","top","both","axis","position"],"sourceRoot":""}