{"version":3,"file":"static/js/409.7df3c20a.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/ContactList/ContactList.jsx","pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["export const getContacts = state => state.contacts;\nexport const getFilter = state => state.filter;\n","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addAsyncContact } from '../../redux/contacts/operations';\nimport Notiflix from 'notiflix';\nimport { getContacts } from '../../redux/contacts/selectors';\nimport { FormControl, FormLabel, Input, Flex, Button } from '@chakra-ui/react';\n\nconst ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContacts);\n  const [formData, setFormData] = useState({ name: '', number: '' });\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const { name, number } = formData;\n\n    const isNameExists = contacts.some(\n      contact => contact.name.toLowerCase() === name.toLowerCase()\n    );\n\n    if (isNameExists) {\n      Notiflix.Notify.warning(`${name} already exists in contacts.`);\n      return;\n    }\n\n    dispatch(addAsyncContact({ name, number }));\n    setFormData({ name: '', number: '' });\n  };\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n    setFormData(prevData => ({ ...prevData, [name]: value }));\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <FormControl mt={'35px'}>\n        <FormLabel htmlFor={'name'} textAlign={'center'}>\n          Name\n          <Input\n            variant={'filled'}\n            id={'name'}\n            type={'text'}\n            name={'name'}\n            autoComplete={'off'}\n            pattern={'[A-Za-zÀ-ÖØ-öø-ÿ]+[s]?[A-Za-zÀ-ÖØ-öø-ÿ]+'}\n            title={\n              \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            }\n            required\n            value={formData.name}\n            onChange={handleChange}\n            placeholder={'Adrian Smith'}\n            mt={'10px'}\n          />\n        </FormLabel>\n      </FormControl>\n      <FormControl mt={'35px'} mb={'45px'}>\n        <FormLabel htmlFor={'number'} textAlign={'center'}>\n          Number\n          <Input\n            variant={'filled'}\n            id={'number'}\n            type={'tel'}\n            name={'number'}\n            autoComplete={'off'}\n            title={\n              'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +'\n            }\n            required\n            value={formData.number}\n            onChange={handleChange}\n            placeholder={'+48 123-456-789'}\n            mt={'10px'}\n          />\n        </FormLabel>\n      </FormControl>\n      <Flex justifyContent={'center'}>\n        <Button\n          type={'submit'}\n          colorScheme={'green'}\n          size={'md'}\n          mb={'90px'}\n          _hover={{ transform: 'scale(1.2)' }}\n        >\n          Add contact\n        </Button>\n      </Flex>\n    </form>\n  );\n};\n\nexport default ContactForm;\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setFilter } from '../../redux/contacts/filterSlice';\nimport { getFilter } from '../../redux/contacts/selectors';\nimport { Flex, Input } from '@chakra-ui/react';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(getFilter);\n  const onFilterChange = event => {\n    dispatch(setFilter(event.target.value));\n  };\n\n  return (\n    <Flex>\n      <Input\n        type={'text'}\n        name={'filterName'}\n        value={filter.status}\n        onChange={onFilterChange}\n        placeholder={'Enter name'}\n        fontSize={'sm'}\n        mt={'5'}\n        mb={'2'}\n      />\n    </Flex>\n  );\n};\n\nexport default Filter;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  fetchContacts,\n  deleteAsyncContact,\n} from '../../redux/contacts/operations';\nimport { getContacts, getFilter } from '../../redux/contacts/selectors';\nimport { Flex, UnorderedList, ListItem, Text, Button } from '@chakra-ui/react';\n\nconst ContactList = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContacts);\n  const filterStatus = useSelector(getFilter);\n\n  const filteredContacts = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filterStatus.status.toLowerCase())\n  );\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const deleteContactById = contactId => {\n    try {\n      dispatch(deleteAsyncContact(contactId));\n    } catch (error) {\n      console.error('Error deleting contact:', error.message);\n    }\n  };\n\n  return (\n    <Flex alignItems={'center'} direction={'column'}>\n      <UnorderedList styleType={'none'} p={'5'}>\n        {filteredContacts.map(contact => (\n          <ListItem\n            key={contact.id}\n            display={'flex'}\n            flexWrap={'nowrap'}\n            alignItems={'center'}\n            mb={'4'}\n          >\n            <Text\n              minW={'160px'}\n              fontSize={'sm'}\n              textAlign={'left'}\n              fontWeight={'semibold'}\n            >\n              {contact.name}\n            </Text>\n            <Text\n              minW={'90px'}\n              fontSize={'xs'}\n              color={'gray.500'}\n              ml={'20px'}\n              mr={'30px'}\n            >\n              {contact.number}\n            </Text>\n            <Button\n              minW={'70px'}\n              fontSize={'xs'}\n              _hover={{ transform: 'scale(1.2)' }}\n              onClick={() => deleteContactById(contact.id)}\n            >\n              Delete\n            </Button>\n          </ListItem>\n        ))}\n      </UnorderedList>\n    </Flex>\n  );\n};\n\nexport default ContactList;\n","import ContactForm from '../../components/ContactForm/ContactForm';\nimport Filter from '../../components/Filter/Filter';\nimport ContactList from '../../components/ContactList/ContactList';\nimport { Helmet, HelmetProvider } from 'react-helmet-async';\nimport { Box, Heading, Text } from '@chakra-ui/react';\n\nconst ContactsPage = () => {\n  return (\n    <>\n      <HelmetProvider>\n        <Helmet>\n          <title>Phonebook</title>\n        </Helmet>\n        <Box maxW={'320px'} mx={'auto'} mt={'10'} textAlign={'center'}>\n          <Heading as={'h1'} textAlign={'center'} fontSize={'4xl'}>\n            Phonebook\n          </Heading>\n          <ContactForm />\n          <Heading as={'h2'} textAlign={'center'} fontSize={'2xl'}>\n            Contacts\n          </Heading>\n          <Text fontSize={'sm'} textAlign={'center'}>\n            Find contact by name\n          </Text>\n          <Filter />\n          <ContactList />\n        </Box>\n      </HelmetProvider>\n    </>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["getContacts","state","contacts","getFilter","filter","dispatch","useDispatch","useSelector","_useState","useState","name","number","_useState2","_slicedToArray","formData","setFormData","handleChange","event","_event$target","target","value","prevData","_objectSpread","_defineProperty","_jsxs","onSubmit","preventDefault","some","contact","toLowerCase","Notiflix","concat","addAsyncContact","children","_jsx","FormControl","mt","FormLabel","htmlFor","textAlign","Input","variant","id","type","autoComplete","pattern","title","required","onChange","placeholder","mb","Flex","justifyContent","Button","colorScheme","size","_hover","transform","status","setFilter","fontSize","filterStatus","filteredContacts","includes","useEffect","fetchContacts","alignItems","direction","UnorderedList","styleType","p","map","ListItem","display","flexWrap","Text","minW","fontWeight","color","ml","mr","onClick","contactId","deleteAsyncContact","error","console","message","deleteContactById","_Fragment","HelmetProvider","Helmet","Box","maxW","mx","Heading","as","ContactForm","Filter","ContactList"],"sourceRoot":""}